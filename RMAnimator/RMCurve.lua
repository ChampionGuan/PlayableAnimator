---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by chaoguan.
--- DateTime: 2021/10/12 17:46
---

---@class RMCurve
---@field length Float
local RMCurve = XECS.class("RMCurve")

---@param ctrl RMAnimatorController
---@param name string
function RMCurve:ctor(ctrl, name, length)
    self._ctrl = ctrl
    self._name = name
    self._keyFrames = ctrl.context:ReadCurve(name)
    self._frameCount = self._keyFrames and #self._keyFrames or 0
    self._angleY = ctrl.context.fZero
    self._position = ctrl.context:V3Zero()
    self._time = -self._ctrl.context.fOne
    self.length = length or self._frameCount > 0 and self._ctrl.context:Float(self._frameCount - 1) * ctrl.context.preFrameTime or ctrl.context.fOne
end

---@param time Float
---@return Vector3, Float
function RMCurve:Evaluate(time)
    ---如果时间一致，直接返回上次记录的数据
    if time == self._time or not self:IsValid() then
        return self._ctrl.context:V3Copy(self._ctrl.context:V3TempZero(), self._position), self._angleY
    end

    local posZ, posY, posX, angleY = nil, nil, nil, nil
    local keyIndex = self._ctrl.context:Int(self._ctrl.context:Floor(time / self._ctrl.context.preFrameTime)) + 1
    if keyIndex >= self._frameCount then
        posZ = self._keyFrames[self._frameCount].z
        posY = self._keyFrames[self._frameCount].y
        posX = self._keyFrames[self._frameCount].x
        angleY = self._keyFrames[self._frameCount].w
    else
        posZ = self._keyFrames[keyIndex].z
        posY = self._keyFrames[keyIndex].y
        posX = self._keyFrames[keyIndex].x
        angleY = self._keyFrames[keyIndex].w

        local percent = (time % self._ctrl.context.preFrameTime) / self._ctrl.context.preFrameTime
        posZ = self._ctrl.context:Lerp(posZ, self._keyFrames[keyIndex + 1].z, percent)
        posY = self._ctrl.context:Lerp(posY, self._keyFrames[keyIndex + 1].y, percent)
        posX = self._ctrl.context:Lerp(posX, self._keyFrames[keyIndex + 1].x, percent)
        angleY = self._ctrl.context:AngleLerp360(angleY, self._keyFrames[keyIndex + 1].w, percent)
    end

    self._position.x = posX
    self._position.y = posY
    self._position.z = posZ
    self._angleY = angleY
    self._time = time

    return self._ctrl.context:V3Copy(self._ctrl.context:V3TempZero(), self._position), self._angleY
end

function RMCurve:IsValid()
    return self._frameCount > 0
end

return RMCurve